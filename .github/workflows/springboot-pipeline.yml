name: Build and push spring-boot docker image

on:
  push:
    branches:
      - '**'
    paths: 
      - 'src/**'
      - '.github/workflows/springboot-pipeline.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: JDK setup
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Maven package
      run: mvn clean package -DskipTests

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: ECR login
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build docker image
      run: |
        docker build -t ${{ secrets.AWS_ECR_REGISTRY }} .

    - name: Tag docker image
      run: |
        docker tag ${{ secrets.AWS_ECR_REGISTRY }} ${{ secrets.AWS_ECR_REGISTRY }}:candidate-2024-${{ github.sha }}

#    - name: Delete prior :latest images
#      run: |
#        existing_latest=$(aws ecr describe-images --repository-name ${{ secrets.AWS_ECR_REGISTRY_REPOSITORY }} --filter tagStatus=TAGGED --query 'images[?contains(imageTags, `latest`)].imageDigest' --output text)
#        if [ -n "$existing_latest" ]; then
#          aws ecr batch-delete-image --repository-name ${{ secrets.AWS_ECR_REGISTRY_REPOSITORY }} --image-ids imageDigest=$existing_latest
#        fi

    - name: Push docker image
      if: github.ref == 'refs/heads/main'
      run: |
        docker push ${{ secrets.AWS_ECR_REGISTRY }}:candidate-2024-${{ github.sha }}
